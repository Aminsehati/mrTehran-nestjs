 scalar DateTime
type Artist {
    _id: String,
    name:String ,
    imgUrl:String,
    coverImgUrl:String ,
    Followers : Int ,
    createdAt:DateTime,
    updatedAt:DateTime,
}
input sortArtists {
    name: Int ,
    Followers: Int ,
    updatedAt: Int ,
    createdAt: Int 
}
type Query {
    getArtists(pagination : Pagination , sort: sortArtists) : [Artist]
    getArtist(id:ID!) : Artist 
    getArtistsCount : Int!
}
input createArtistInput {
    name: String , 
    imgUrl: String ,
    coverImgUrl : String
}
input updateArtistInput {
    name: String , 
    imgUrl: String ,
    coverImgUrl : String
}
type Mutation {
    createArtist(input: createArtistInput!): Artist
    updateArtist(id:ID! ,input : updateArtistInput!) :Artist
    deleteArtist(id:ID!) : Artist ,
    FollowArtist(id:ID!) : Artist 
}