 scalar DateTime
type Query {
    getTracks(pagination:Pagination , sort: sortTrack , filter : filterTrack ) : [Track]
    getTrack(id:ID!) : Track
    getTracksCount:Int!
}
type Track {
    _id: String ,
    imgUrl: String ,
    audioUrl: String ,
    trackName: String ,
    view: Int ,
    like: Int ,
    artists: [Artist],
    playlists:[PlayList],
    hasPodcast: Boolean ,
    createdAt:DateTime,
    updatedAt:DateTime,
}
input createTrackInput {
    imgUrl: String! ,
    audioUrl: String! ,
    trackName: String! ,
    artists:[ID!],
    haPodcast: Boolean ,
    playlists:[ID]!
}
input updateTrackInput {
    imgUrl: String! ,
    audioUrl: String! ,
    trackName: String! ,
    artists:[ID!],
    playlists:[ID]!,
    haPodcast: Boolean ,
}
input sortTrack {
    trackName: Int ,
    view: Int ,
    like: Int ,
    createdAt: Int,
    updatedAt: Int,
    hasPodcast: Boolean  
}
input filterTrack {
    artistID: ID ,
    playlistID : ID ,
}
type Mutation {
    createTrack(input : createTrackInput!) : Track ,
    updateTrack(id:String , input : updateTrackInput) : Track ,
    deleteTrack(id:ID!): Track , 
    likeTrack(id:ID!): Track ,
    viewTrack(id:ID!): Track ,
}